/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    bindings = <&mo>, <&kp>;

    display-name = "Layer-Tap";
};

&mt {
    tapping-term-ms = <180>;
    flavor = "tap-preferred";
};

/ {
    macros {
        jsfn: jsfn {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN &kp SPACE &kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "JSFN";
        };

        upDirectory: upDirectory {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PERIOD &kp PERIOD &kp SLASH>;
            label = "UPDIRECTORY";
        };

        toWin: toWin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &to 1>;
            label = "TOWIN";
        };

        toMac: toMac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &to 0>;
            label = "TOMAC";
        };
    };

    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;

            // hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 40 39 38 37 36>;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-on-release;

            // hold-trigger-key-positions = <0 1 12 13 14 15 16 17 26 27 28 29 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 40 39 37 38 36>;
        };

        layerModTap: layerModTap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERMODTAP";
            bindings = <&to>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "tap-preferred";
        };

        toMacModTap: toMacModTap {
            compatible = "zmk,behavior-hold-tap";
            label = "TOMACMODTAP";
            bindings = <&toMac>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };

        toWinModTap: toWinModTap {
            compatible = "zmk,behavior-hold-tap";
            label = "TOWINMODTAP";
            bindings = <&toWin>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        MAC {
            label = "MAC";
            bindings = <
&kp LC(UP_ARROW)  &kp Q                &kp L            &kp Y            &kp P              &kp B            &kp Z         &kp F              &kp O            &kp U            &toWinModTap 0 SLASH  &kp LG(SPACE)
&kp RIGHT_ALT     &hml LEFT_CONTROL C  &hml LEFT_ALT R  &hml LEFT_GUI S  &hml LEFT_SHIFT T  &kp G            &kp M         &hmr LEFT_SHIFT N  &hmr LEFT_GUI E  &hmr LEFT_ALT I  &hmr LEFT_CONTROL A   &kp SINGLE_QUOTE
&mt ENTER ESCAPE  &kp W                &kp J            &mt LG(C) V      &mt LG(V) D        &kp K            &kp X         &kp H              &kp COLON        &kp COMMA        &kp PERIOD            &mt LG(Q) DELETE
                                                        &lt 5 TAB        &kp SPACE          &kp BACKSPACE    &lt 3 ESCAPE  &lt 6 ENTER        &kp DELETE
            >;
        };

        BASE {
            bindings = <
&kp LG(TAB)           &kp Q            &kp L            &kp Y                &kp P              &kp B            &kp Z         &kp F              &kp O                &kp U            &toMacModTap 0 SLASH  &kp LA(SPACE)
&kp RIGHT_ALT         &hml LEFT_GUI C  &hml LEFT_ALT R  &hml LEFT_CONTROL S  &hml LEFT_SHIFT T  &kp G            &kp M         &hmr LEFT_SHIFT N  &hmr LEFT_CONTROL E  &hmr LEFT_ALT I  &hmr LEFT_GUI A       &kp SINGLE_QUOTE
&layerModTap 7 ENTER  &kp W            &kp J            &mt LC(C) V          &mt LC(V) D        &kp K            &kp X         &kp H              &kp COLON            &kp COMMA        &kp PERIOD            &mt LA(F4) DELETE
                                                        &lt 4 TAB            &kp SPACE          &kp BACKSPACE    &lt 2 ESCAPE  &lt 6 ENTER        &kp DELETE
            >;

            label = "BASE";
        };

        NUMBERS {
            bindings = <
&none     &none         &kp NUMBER_7            &kp NUMBER_8                &kp NUMBER_9              &none            &kp F12  &kp F7              &kp F8                &kp F9            &none         &none
&kp RALT  &kp LEFT_GUI  &hml LEFT_ALT NUMBER_4  &hml LEFT_CONTROL NUMBER_5  &hml LEFT_SHIFT NUMBER_6  &none            &kp F11  &hmr LEFT_SHIFT F4  &hmr LEFT_CONTROL F5  &hmr LEFT_ALT F6  &kp LEFT_GUI  &kp RALT
&none     &kp COMMA     &kp NUMBER_1            &kp NUMBER_2                &kp NUMBER_3              &none            &kp F10  &kp F1              &kp F2                &kp F3            &kp DOT       &kp DELETE
                                                &kp SPACE                   &kp NUMBER_0              &kp BACKSPACE    &trans   &kp ENTER           &kp DELETE
            >;

            label = "NUM";
        };

        NUM_MAC {
            label = "NUM_MC";
            bindings = <
&none     &none             &kp NUMBER_7            &kp NUMBER_8            &kp NUMBER_9              &none            &kp F12     &kp F7              &kp F8            &kp F9            &none             &none
&kp RALT  &kp LEFT_CONTROL  &hml LEFT_ALT NUMBER_4  &hml LEFT_GUI NUMBER_5  &hml LEFT_SHIFT NUMBER_6  &none            &kp F11     &hmr LEFT_SHIFT F4  &hmr LEFT_WIN F5  &hmr LEFT_ALT F6  &kp LEFT_CONTROL  &kp RALT
&none     &kp COMMA         &kp NUMBER_1            &kp NUMBER_2            &kp NUMBER_3              &none            &kp F10     &kp F1              &kp F2            &kp F3            &kp DOT           &kp DELETE
                                                    &kp SPACE               &kp NUMBER_0              &kp BACKSPACE    &kp ESCAPE  &kp ENTER           &kp DELETE
            >;
        };

        NAVIGATION {
            bindings = <
&none     &kp LG(LEFT_ARROW)  &kp LG(RIGHT_ARROW)  &kp C_VOL_DN      &kp C_VOLUME_UP   &none            &kp LS(LG(LEFT))    &kp INSERT        &kp PAGE_DOWN   &kp PAGE_UP   &none                   &kp LG(LS(RIGHT))
&kp RALT  &kp LEFT_GUI        &kp LALT             &kp LCTRL         &kp LSHFT         &kp LG(LS(S))    &kp LG(LEFT_ARROW)  &kp LEFT_ARROW    &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT               &kp LG(RIGHT)
&none     &none               &kp C_PREVIOUS       &kp C_PLAY_PAUSE  &kp C_AC_FORWARD  &kp LS(TAB)      &none               &kp LG(UP_ARROW)  &kp HOME        &kp END       &kp LG(LS(DOWN_ARROW))  &trans
                                                   &trans            &none             &none            &caps_word          &kp ENTER         &kp DELETE
            >;

            label = "NAV";
        };

        NAV_MAC {
            label = "NAV_MAC";
            bindings = <
&none                 &kp LG(LEFT_ARROW)    &kp LG(RIGHT_ARROW)  &kp C_VOL_DN      &kp C_VOLUME_UP   &none                       &kp LA(LC(LG(LEFT)))    &kp INSERT         &kp PAGE_DOWN   &kp PAGE_UP   &kp LC(LA(C))          &kp LA(LC(LG(RIGHT)))
&kp RALT              &kp LEFT_CONTROL      &kp LALT             &kp LEFT_GUI      &kp LSHFT         &kp LG(LS(LC(NUMBER_4)))    &kp LA(LC(LEFT_ARROW))  &kp LEFT_ARROW     &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT              &kp LC(LA(RIGHT))
&kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_PREVIOUS       &kp C_PLAY_PAUSE  &kp C_AC_FORWARD  &none                       &none                   &kp LC(LA(ENTER))  &kp HOME        &kp END       &kp LC(LA(BACKSPACE))  &trans
                                                                 &trans            &none             &none                       &caps_word              &kp ENTER          &kp DELETE
            >;
        };

        SYMBOLS {
            bindings = <
&none                              &kp RA(SLASH)                &kp AT              &kp UNDER                       &kp EQUAL                          &kp PLUS         &kp PIPE   &kp AMPERSAND               &kp PERCENT                    &kp CARET         &upDirectory                 &none
&jsfn                              &hml LEFT_CONTROL BACKSLASH  &hml LALT QUESTION  &hml LEFT_GUI LEFT_PARENTHESIS  &hml LEFT_SHIFT RIGHT_PARENTHESIS  &kp MINUS        &kp GRAVE  &hmr LEFT_SHIFT LEFT_BRACE  &hmr LEFT_CONTROL RIGHT_BRACE  &hmr LALT DOLLAR  &hmr LEFT_GUI DOUBLE_QUOTES  &none
&mt RA(LS(NUMBER_1)) RA(NUMBER_1)  &kp TILDE                    &kp EXCLAMATION     &kp LEFT_BRACKET                &kp RIGHT_BRACKET                  &kp STAR         &kp HASH   &kp LESS_THAN               &kp GREATER_THAN               &kp SEMI          &kp RA(N5)                   &bt BT_NXT
                                                                                    &kp TAB                         &kp SPACE                          &kp BACKSPACE    &trans     &trans                      &trans
            >;

            label = "SYMB";
        };

        MOUSE {
            bindings = <
&to 1   &trans           &trans    &trans    &trans    &trans            &trans  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI     &trans
&trans  &msc SCRL_RIGHT  &mkp MB3  &mkp MB2  &mkp MB1  &msc SCRL_LEFT    &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &trans           &trans    &mkp MB4  &mkp MB5  &trans            &trans  &kp LEFT_ARROW  &kp DOWN_ARROW    &kp UP_ARROW  &kp RIGHT_ARROW  &trans
                                   &trans    &trans    &trans            &trans  &trans          &trans
            >;

            label = "MOUSE";
        };

        bt {
            bindings = <
&bt BT_CLR_ALL  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "BT";
        };
    };
};
